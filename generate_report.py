#!/usr/bin/env python3
"""
–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –æ—Ç—á–µ—Ç–æ–≤ AIFC Court Document Monitor
"""

import sys
import argparse
from report_generator import ReportGenerator

def main():
    parser = argparse.ArgumentParser(description='–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –æ—Ç—á–µ—Ç–æ–≤ AIFC Court Document Monitor')
    parser.add_argument('--json', action='store_true', help='–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å JSON –æ—Ç—á–µ—Ç')
    parser.add_argument('--output', '-o', default='aifc_report.json', help='–ò–º—è —Ñ–∞–π–ª–∞ –¥–ª—è JSON –æ—Ç—á–µ—Ç–∞')
    parser.add_argument('--dir', '-d', default='aifc_documents', help='–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏')
    
    args = parser.parse_args()
    
    print("üìä === –ì–ï–ù–ï–†–ê–¢–û–† –û–¢–ß–ï–¢–û–í AIFC COURT ===")
    print("=" * 50)
    
    try:
        generator = ReportGenerator(args.dir)
        
        if args.json:
            # –¢–æ–ª—å–∫–æ JSON –æ—Ç—á–µ—Ç
            json_file = generator.generate_json_report(args.output)
            print(f"üíæ JSON –æ—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {json_file}")
        else:
            # –ö–æ–Ω—Å–æ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
            generator.generate_console_report()
            
            # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å JSON
            response = input("\nüíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–π JSON –æ—Ç—á–µ—Ç? (y/n): ").lower().strip()
            if response in ['y', 'yes', '–¥–∞', '–¥']:
                json_file = generator.generate_json_report(args.output)
                print(f"üíæ JSON –æ—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {json_file}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return 1
    
    return 0

if __name__ == "__main__":
    sys.exit(main())